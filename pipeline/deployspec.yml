#
# deployspec.yml
#

version: 0.2

#env:
#  variables:
#    name: value

phases:
  install:
    runtime-versions:
      golang: 1.x
      python: 3.x
    commands:
      - apt-get update -y
      - apt-get install -y ccrypt
      - wget https://releases.hashicorp.com/terraform/0.12.21/terraform_0.12.21_linux_amd64.zip
      - unzip terraform_0.12.21_linux_amd64.zip
      - mv terraform /usr/local/bin
      - pip3 install --user ansible

  pre_build:
    commands:
      - latest_build=$(aws --region=$AWS_REGION ssm get-parameter --name /containers/$CONTAINER_IMAGE/latest | grep "Value" | awk -F\" '{print $4}')
      - git clone https://$GITLAB_USER:$GITLAB_TOKEN@gitlab.com/uvalib/terraform-infrastructure.git
      - export ENCRYPTED=docker.lib.virginia.edu/staging/keys/docker_staging.pem.cpt
      - export SECRET=${ENCRYPTED%.cpt}
      - $CODEBUILD_SRC_DIR/terraform-infrastructure/scripts/decrypt-key.ksh $CODEBUILD_SRC_DIR/terraform-infrastructure/$ENCRYPTED $SECRET

  build:
    commands:
      - cd $CODEBUILD_SRC_DIR/terraform-infrastructure/libra_services/deposit-auth-ws/staging
      - terraform init
      - terraform apply -auto-approve -var container_tag=$latest_build
      - cd $CODEBUILD_SRC_DIR/terraform-infrastructure/libra_services/deposit-auth-ws/staging/ansible
      - export PATH="$PATH:$(python3 -c 'import site; print(site.USER_BASE)')/bin"
      - ansible-playbook deploy_backend.yml
      - sh $CODEBUILD_SRC_DIR/pipeline/wait_for_version.sh $TC_ENDPOINT $latest_build 300

#  post_build:
#    commands:

#
# end of file
#
